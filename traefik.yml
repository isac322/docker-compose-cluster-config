version: '3.8'

services:
  reverse-proxy:
    ports:
      - 80:80
    image: traefik:v2.4
    networks:
      - traefik-public
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3
        window: 120s
      mode: replicated
      replicas: 2
      placement:
        constraints: [node.role == manager]
      labels:
        - traefik.enable=true
        - traefik.http.routers.reverse-proxy.rule=Host(`traefik.${DOMAIN?Variable not set}`)
        - traefik.http.routers.reverse-proxy.entrypoints=web
        - traefik.http.routers.reverse-proxy.service=api@internal
        - traefik.http.routers.reverse-proxy.middlewares=admin-auth
        - traefik.http.middlewares.admin-auth.basicauth.users=${USERNAME?Variable not set}:${HASHED_PASSWORD?Variable not set}
        - traefik.http.services.reverse-proxy.loadbalancer.server.port=8080
    command:
      - --providers.docker.swarmMode=true
      - --providers.docker.exposedbydefault=false
      - --providers.docker.network=traefik-public
      - --entryPoints.web.address=:80
      - --entryPoints.web.forwardedHeaders.insecure
      - --accesslog
      - --log
      - --api

networks:
  traefik-public:
    external: true
