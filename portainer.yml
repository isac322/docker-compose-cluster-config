version: '3.9'

services:
  portainer:
    image: portainer/portainer-ce:2.1.1-alpine
    command: -H tcp://tasks.agent:9001 --tlsskipverify
    networks:
      - traefik-public
      - agent_network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /mnt/portainer:/data
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.http.routers.portainer-insecure.rule=Host(`portainer.${DOMAIN?Variable not set}`)
        - traefik.http.routers.portainer-insecure.entrypoints=web
        - traefik.http.routers.portainer-insecure.middlewares=redirectscheme
        - traefik.http.routers.portainer.rule=Host(`portainer.${DOMAIN?Variable not set}`)
        - traefik.http.routers.portainer.tls=true
        - traefik.http.routers.portainer.entrypoints=web-secure
        - traefik.http.routers.portainer.service=portainer
        - traefik.http.services.portainer.loadbalancer.server.port=9000

  agent:
    image: portainer/agent
    environment:
      AGENT_CLUSTER_ADDR: tasks.agent
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - agent_network
    deploy:
      mode: global
      placement:
        constraints: [ node.platform.os == linux ]

networks:
  agent_network:
    driver: overlay
    attachable: true
  traefik-public:
    external: true
